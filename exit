[33mcommit 623280703216fd0771215dccb59351938547bd4d[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m
Author: ChoYeongSoo <ddysygood@gmail.com>
Date:   Thu Oct 23 14:26:55 2025 +0900

    3nd commit

[1mdiff --git a/02/data-source/learn-terraform-data-sources-app b/02/data-source/learn-terraform-data-sources-app[m
[1mnew file mode 160000[m
[1mindex 0000000..bf30acb[m
[1m--- /dev/null[m
[1m+++ b/02/data-source/learn-terraform-data-sources-app[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit bf30acbc5b5ec6819be830b00df2b7d7d133cdd1[m
[1mdiff --git a/02/data-source/learn-terraform-data-sources-vpc b/02/data-source/learn-terraform-data-sources-vpc[m
[1mnew file mode 160000[m
[1mindex 0000000..5204ab4[m
[1m--- /dev/null[m
[1m+++ b/02/data-source/learn-terraform-data-sources-vpc[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit 5204ab4c44aba124541a1a0224c3f2b84c3539d5[m
[1mdiff --git a/02/lab01/main.tf b/02/lab01/main.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..5c59100[m
[1m--- /dev/null[m
[1m+++ b/02/lab01/main.tf[m
[36m@@ -0,0 +1,77 @@[m
[32m+[m[32m######################[m
[32m+[m[32m# ÏûëÏóÖÏàúÏÑú[m
[32m+[m[32m# * vpc ÏÉùÏÑ±[m
[32m+[m[32m# * IGW ÏÉùÏÑ± Î∞è VPCÏóê Ïó∞Í≤∞[m
[32m+[m[32m# * Public subnet ÏÉùÏÑ±[m
[32m+[m[32m# * Routing table ÏÉùÏÑ± Î∞è public subnetÏóê Ïó∞Í≤∞[m[41m [m
[32m+[m[32m######################[m
[32m+[m
[32m+[m[32m# provider ÏÑ§Ï†ï[m
[32m+[m
[32m+[m[32mprovider "aws" {[m
[32m+[m[32m  region = "us-east-2"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# vpc ÏÉùÏÑ±[m[41m [m
[32m+[m
[32m+[m[32mresource "aws_vpc" "myVPC" {[m
[32m+[m[32m  cidr_block       = "10.0.0.0/16"[m
[32m+[m[32m  instance_tenancy = "default"[m
[32m+[m[32m  enable_dns_hostnames = true[m
[32m+[m[32m  enable_dns_support = true[m
[32m+[m
[32m+[m[32m  tags = {[m
[32m+[m[32m    Name = "myVPC"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# * IGW ÏÉùÏÑ± Î∞è VPCÏóê Ïó∞Í≤∞[m
[32m+[m
[32m+[m[32mresource "aws_internet_gateway" "myIGW" {[m
[32m+[m[32m  vpc_id = aws_vpc.myVPC.id[m
[32m+[m
[32m+[m[32m  tags = {[m
[32m+[m[32m    Name = "myIGW"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# * Public subnet ÏÉùÏÑ±[m
[32m+[m
[32m+[m[32mresource "aws_subnet" "myPubSN" {[m
[32m+[m[32m  vpc_id     = aws_vpc.myVPC.id[m
[32m+[m[32m  cidr_block = "10.0.1.0/24"[m
[32m+[m[32m  map_public_ip_on_launch = true[m
[32m+[m
[32m+[m[32m  tags = {[m
[32m+[m[32m    Name = "myPubSN"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# * Routing table ÏÉùÏÑ± Î∞è public subnetÏóê Ïó∞Í≤∞[m[41m [m
[32m+[m
[32m+[m[32mresource "aws_route_table" "myPubRT" {[m
[32m+[m[32m  vpc_id = aws_vpc.myVPC.id[m
[32m+[m
[32m+[m[32m  route {[m
[32m+[m[32m    cidr_block = "0.0.0.0/0"[m
[32m+[m[32m    gateway_id = aws_internet_gateway.myIGW.id[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  tags = {[m
[32m+[m[32m    Name = "myPubRT"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_route_table_association" "myPubRTassoc" {[m
[32m+[m[32m  subnet_id      = aws_subnet.myPubSN.id[m
[32m+[m[32m  route_table_id = aws_route_table.myPubRT.id[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[1mdiff --git a/02/lab02/ec2.tf b/02/lab02/ec2.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..9ad094d[m
[1m--- /dev/null[m
[1m+++ b/02/lab02/ec2.tf[m
[36m@@ -0,0 +1,64 @@[m
[32m+[m[32m#########################[m
[32m+[m[32m# ec2 ÏÉùÏÑ±[m
[32m+[m[32m#########################[m
[32m+[m
[32m+[m[32m# provicer ÏÑ§Ï†ï[m
[32m+[m[32mprovider "aws" {[m
[32m+[m[32m    region = "us-east-2"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# data source[m
[32m+[m[32m# Amazon Linux 2023 AMI[m
[32m+[m[32mdata "aws_ami" "amazonLinux" {[m
[32m+[m[32m  most_recent = true[m
[32m+[m
[32m+[m[32m  filter {[m
[32m+[m[32m    name   = "name"[m
[32m+[m[32m    values = ["al2023-ami-2023.*-kernel-6.1-x86_64"][m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  filter {[m
[32m+[m[32m    name   = "virtualization-type"[m
[32m+[m[32m    values = ["hvm"][m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  owners = ["137112412989"][m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_instance" "myInstance" {[m
[32m+[m[32m  ami           = data.aws_ami.amazonLinux.id[m
[32m+[m[32m  instance_type = "t3.micro"[m
[32m+[m
[32m+[m[32m  key_name = "mykeypair"[m
[32m+[m[32m  vpc_security_group_ids = [aws_security_group.allow_ssh.id][m
[32m+[m
[32m+[m[32m  tags = {[m
[32m+[m[32m    Name = "myInstance"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# sg inbound / outbound[m[41m [m
[32m+[m
[32m+[m[32mresource "aws_security_group" "allow_ssh" {[m
[32m+[m[32m  name        = "allow_ssh"[m
[32m+[m[32m  description = "Allow ssh inbound traffic and all outbound traffic"[m
[32m+[m
[32m+[m[32m  tags = {[m
[32m+[m[32m    Name = "allow_ssh"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_vpc_security_group_ingress_rule" "allow_ssh_ipv4" {[m
[32m+[m[32m  security_group_id = aws_security_group.allow_ssh.id[m
[32m+[m[32m  cidr_ipv4         = "0.0.0.0/0"[m
[32m+[m[32m  from_port         = 22[m
[32m+[m[32m  ip_protocol       = "tcp"[m
[32m+[m[32m  to_port           = 22[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_vpc_security_group_egress_rule" "allow_all_traffic_ipv4" {[m
[32m+[m[32m  security_group_id = aws_security_group.allow_ssh.id[m
[32m+[m[32m  cidr_ipv4         = "0.0.0.0/0"[m
[32m+[m[32m  ip_protocol       = "-1"[m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/02/one-web-server-with-vars/learn-terraform-variables b/02/one-web-server-with-vars/learn-terraform-variables[m
[1mnew file mode 160000[m
[1mindex 0000000..543b5e5[m
[1m--- /dev/null[m
[1m+++ b/02/one-web-server-with-vars/learn-terraform-variables[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit 543b5e5d1332f0d7fb2c632dd6694ce5a8f998a9[m
[1mdiff --git a/02/one-webserver/main.tf b/02/one-webserver/main.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..66163ff[m
[1m--- /dev/null[m
[1m+++ b/02/one-webserver/main.tf[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32mprovider "aws" {[m
[32m+[m[32m  region = var.my_region[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# ec2 instance ÏÉùÏÑ±[m
[32m+[m[32m# * webserver Íµ¨ÏÑ± => user_data[m
[32m+[m[32m# * security group ÏÉùÏÑ±[m
[32m+[m
[32m+[m[32mresource "aws_instance" "example" {[m
[32m+[m[32m  ami                         = var.my_ami_ubuntu2204[m
[32m+[m[32m  instance_type               = var.my_instance_type[m
[32m+[m[32m  vpc_security_group_ids      = [aws_security_group.allow_8080.id][m
[32m+[m[32m  user_data_replace_on_change = var.my_userdata_changed[m
[32m+[m[32m  tags                        = var.my_webserver_tag[m
[32m+[m
[32m+[m[32m  user_data = <<EOF[m
[32m+[m[32m#!/bin/bash[m
[32m+[m[32mecho "Hello, World" > index.html[m
[32m+[m[32mnohup busybox httpd -f -p 8080 &[m
[32m+[m[32mEOF[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mresource "aws_security_group" "allow_8080" {[m
[32m+[m[32m  name        = "allow_8080"[m
[32m+[m[32m  description = "Allow TLS inbound traffic and all outbound traffic"[m
[32m+[m[32m  tags = var.my_sg_tags[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_vpc_security_group_ingress_rule" "allow_8080_ipv4" {[m
[32m+[m[32m  security_group_id = aws_security_group.allow_8080.id[m
[32m+[m[32m  cidr_ipv4         = "0.0.0.0/0"[m
[32m+[m[32m  from_port         = var.my_web_port[m
[32m+[m[32m  ip_protocol       = "tcp"[m
[32m+[m[32m  to_port           = var.my_web_port[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_vpc_security_group_egress_rule" "allow_all_traffic_ipv4" {[m
[32m+[m[32m  security_group_id = aws_security_group.allow_8080.id[m
[32m+[m[32m  cidr_ipv4         = "0.0.0.0/0"[m
[32m+[m[32m  ip_protocol       = "-1" # semantically equivalent to all ports[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[1mdiff --git a/02/one-webserver/outputs.tf b/02/one-webserver/outputs.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..f194772[m
[1m--- /dev/null[m
[1m+++ b/02/one-webserver/outputs.tf[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32m#[m
[32m+[m[32m# Output Variable Ï†ïÏùò[m
[32m+[m[32m#[m
[32m+[m
[32m+[m[32moutput "myweb_public_ip" {[m
[32m+[m[32m  description = "My webserver Public ip"[m
[32m+[m[32m  value       = aws_instance.example.public_ip[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# [FILE] terraform.tfstate[m
[32m+[m[32m# tf state list[m
[32m+[m[32m# tf state show aws_instance.example[m
[32m+[m[32m# -> public_ip, public_dns[m
[32m+[m[32m# -> aws_instance.example.public_dns[m
[32m+[m
[32m+[m[32moutput "myseb_public_dns" {[m
[32m+[m[32m  description = "my webserver public dns"[m
[32m+[m[32m  value = aws_instance.example.public_dns[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# tf output[m
[32m+[m[32m# tf output myweb_public_dns[m
[32m+[m[32m# tf output -raw myweb_public_dns[m
[32m+[m[32m# curl $(tf output -raw  myseb_public_dns):8080[m
\ No newline at end of file[m
[1mdiff --git a/02/one-webserver/variables.tf b/02/one-webserver/variables.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..f199f43[m
[1m--- /dev/null[m
[1m+++ b/02/one-webserver/variables.tf[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32m#[m
[32m+[m[32m# Input Variable Ï†ïÏùò[m
[32m+[m[32m#[m
[32m+[m
[32m+[m[32mvariable "my_region" {[m
[32m+[m[32m  description = "AWS My Region"[m
[32m+[m[32m  type        = string[m
[32m+[m[32m  default     = "us-east-2"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvariable "my_ami_ubuntu2204" {[m
[32m+[m[32m  description = "AWS MY AMI - Ubuntu 24.04 LTS"[m
[32m+[m[32m  type        = string[m
[32m+[m[32m  default     = "ami-0cfde0ea8edd312d4"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvariable "my_instance_type" {[m
[32m+[m[32m  description = "My ununtu instance type"[m
[32m+[m[32m  type        = string[m
[32m+[m[32m  default     = "t3.micro"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvariable "my_userdata_changed" {[m
[32m+[m[32m  description = "User data replace on chage"[m
[32m+[m[32m  type        = bool[m
[32m+[m[32m  default     = true[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvariable "my_webserver_tag" {[m
[32m+[m[32m  description = "my webserver tags"[m
[32m+[m[32m  type        = map(any)[m
[32m+[m[32m  default = {[m
[32m+[m[32m    Name = "mywebserver"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvariable "my_sg_tags" {[m
[32m+[m[32m    description = "my security group tags"[m
[32m+[m[32m    type = map(string)[m
[32m+[m[32m    default = {[m
[32m+[m[32m        Name = "allow_8080"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvariable "my_web_port" {[m
[32m+[m[32m  description = "my webserver port"[m
[32m+[m[32m  type = number[m
[32m+[m[32m  default = 8080[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/03/elb-web-db/global/s3/main.tf b/03/elb-web-db/global/s3/main.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..53eaa1e[m
[1m--- /dev/null[m
[1m+++ b/03/elb-web-db/global/s3/main.tf[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mprovider "aws" {[m
[32m+[m[32m  region = "us-east-2"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_s3_bucket" "mybucket" {[m
[32m+[m[32m  bucket = "mybucket-1988-1002-9181"[m
[32m+[m
[32m+[m[32m  tags = {[m
[32m+[m[32m    Name        = "mybucket"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_dynamodb_table" "myDynamoDBTable" {[m
[32m+[m[32m  name             = "myDynamoDBTable"[m
[32m+[m[32m  hash_key         = "LockID"[m
[32m+[m[32m  billing_mode     = "PAY_PER_REQUEST"[m
[32m+[m
[32m+[m[32m  attribute {[m
[32m+[m[32m    name = "LockID"[m
[32m+[m[32m    type = "S"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/03/elb-web-db/global/s3/outputs.tf b/03/elb-web-db/global/s3/outputs.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..18a0d7d[m
[1m--- /dev/null[m
[1m+++ b/03/elb-web-db/global/s3/outputs.tf[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32moutput "s3_bucket_arn" {[m
[32m+[m[32m    value = aws_s3_bucket.mybucket.arn[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32moutput "dynamodb_table_name" {[m
[32m+[m[32m    value = aws_dynamodb_table.myDynamoDBTable.name[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/03/elb-web-db/stage/data-stores/mysql/db_credentials.sh b/03/elb-web-db/stage/data-stores/mysql/db_credentials.sh[m
[1mnew file mode 100644[m
[1mindex 0000000..c1b11f7[m
[1m--- /dev/null[m
[1m+++ b/03/elb-web-db/stage/data-stores/mysql/db_credentials.sh[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mexport TF_VAR_dbuser="admin"[m
[32m+[m[32mexport TF_VAR_dbpassword="password"[m
[1mdiff --git a/03/elb-web-db/stage/data-stores/mysql/main.tf b/03/elb-web-db/stage/data-stores/mysql/main.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..0b8f9c8[m
[1m--- /dev/null[m
[1m+++ b/03/elb-web-db/stage/data-stores/mysql/main.tf[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mprovider "aws" {[m
[32m+[m[32m  region = "us-east-2"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_db_instance" "mydb_instance" {[m
[32m+[m[32m  allocated_storage    = 10[m
[32m+[m[32m  db_name              = "mydb"[m
[32m+[m[32m  engine               = "mysql"[m
[32m+[m[32m  engine_version       = "8.0"[m
[32m+[m[32m  instance_class       = "db.t3.micro"[m
[32m+[m[32m  parameter_group_name = "default.mysql8.0"[m
[32m+[m[32m  skip_final_snapshot  = true[m
[32m+[m
[32m+[m[32m  username             = "var.dbuser"[m
[32m+[m[32m  password             = "var.dbpassword"[m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/03/elb-web-db/stage/data-stores/mysql/variables.tf b/03/elb-web-db/stage/data-stores/mysql/variables.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..481c1b1[m
[1m--- /dev/null[m
[1m+++ b/03/elb-web-db/stage/data-stores/mysql/variables.tf[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32mvariable "dbuser" {[m
[32m+[m[32m    description = "the database user name"[m
[32m+[m[32m    type = string[m
[32m+[m[32m    sensitive = true[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mvariable "dbpassword" {[m
[32m+[m[32m    description = "the database user password"[m
[32m+[m[32m    type = string[m
[32m+[m[32m    sensitive = true[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/03/global/instance/main.tf b/03/global/instance/main.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..28a1d9b[m
[1m--- /dev/null[m
[1m+++ b/03/global/instance/main.tf[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32mterraform {[m
[32m+[m[32m  backend "s3" {[m
[32m+[m[32m    bucket = "mybucket-1988-1002-9181"[m
[32m+[m[32m    key    = "global/s3/terraform.tfstate"[m
[32m+[m[32m    region = "us-east-2"[m
[32m+[m[32m    dynamodb_table = "terraform-locks"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mprovider "aws" {[m
[32m+[m[32m  region = "us-east-2"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mdata "aws_ami" "ubuntu2204ami" {[m
[32m+[m[32m  most_recent = true[m
[32m+[m
[32m+[m[32m  filter {[m
[32m+[m[32m    name   = "name"[m
[32m+[m[32m    values = ["ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"][m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  filter {[m
[32m+[m[32m    name   = "virtualization-type"[m
[32m+[m[32m    values = ["hvm"][m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  owners = ["099720109477"] # Canonical[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_instance" "myinstance" {[m
[32m+[m[32m  ami           = data.aws_ami.ubuntu2204ami.id[m
[32m+[m[32m  instance_type = "t3.micro"[m
[32m+[m
[32m+[m[32m  tags = {[m
[32m+[m[32m    Name = "myinstance"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/03/global/s3/main.tf b/03/global/s3/main.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..6ee8b30[m
[1m--- /dev/null[m
[1m+++ b/03/global/s3/main.tf[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mprovider "aws" {[m
[32m+[m[32m  region = "us-east-2"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_s3_bucket" "terraform_state" {[m
[32m+[m[32m  bucket = "mybucket-1988-1002-9181"[m
[32m+[m
[32m+[m[32m  tags = {[m
[32m+[m[32m    Name        = "Mybucket"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mresource "aws_dynamodb_table" "terraform-locks" {[m
[32m+[m[32m  name             = "terraform-locks"[m
[32m+[m[32m  hash_key         = "LockID"[m
[32m+[m[32m  billing_mode     = "PAY_PER_REQUEST"[m
[32m+[m
[32m+[m[32m  attribute {[m
[32m+[m[32m    name = "LockID"[m
[32m+[m[32m    type = "S"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/03/global/s3/outputs.tf b/03/global/s3/outputs.tf[m
[1mnew file mode 100644[m
[1mindex 0000000..4503090[m
[1m--- /dev/null[m
[1m+++ b/03/global/s3/outputs.tf[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32moutput "s3_bucket_arn" {[m
[32m+[m[32m    value = aws_s3_bucket.terraform_state.arn[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32moutput "dynamodb_table_name" {[m
[32m+[m[32m    value = aws_dynamodb_table.terraform-locks.name[m
[32m+[m[32m}[m
\ No newline at end of file[m
